{"version":3,"sources":["Card.js","Deck.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","angle","Math","random","xPos","yPos","_transform","style","transform","this","className","src","image","alt","name","Component","API_URL","Deck","state","deck","drawn","getCard","bind","a","axios","get","setState","data","deck_id","cardUrl","cardRes","success","Error","card","cards","console","log","st","id","code","value","suit","alert","map","c","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAwBeA,E,kDApBb,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAIC,EAAwB,GAAhBC,KAAKC,SAAgB,GAC7BC,EAAuB,GAAhBF,KAAKC,SAAgB,GAC5BE,EAAuB,GAAhBH,KAAKC,SAAgB,GAJf,OAKjB,EAAKG,WAAL,oBAA+BF,EAA/B,eAA0CC,EAA1C,sBAA4DJ,EAA5D,QALiB,E,0CAQnB,WACE,OACE,qBACEM,MAAO,CAAEC,UAAWC,KAAKH,YACzBI,UAAU,OACVC,IAAKF,KAAKT,MAAMY,MAChBC,IAAKJ,KAAKT,MAAMc,W,GAfLC,aCFbC,G,MAAU,wCAKVC,E,kDACJ,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CAAEC,KAAM,KAAMC,MAAO,IAClC,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBAHE,E,4FAKnB,4BAAAC,EAAA,sEACmBC,IAAMC,IAAN,UAAaT,EAAb,kBADnB,OACMG,EADN,OAEEV,KAAKiB,SAAS,CAAEP,KAAMA,EAAKQ,OAF7B,gD,kHAIA,kCAAAJ,EAAA,6DACMK,EAAUnB,KAAKS,MAAMC,KAAKS,QADhC,SAGQC,EAHR,UAGqBb,EAHrB,YAGgCY,EAHhC,mBAIwBJ,IAAMC,IAAII,GAJlC,WAIQC,EAJR,QAKiBH,KAAKI,QALtB,sBAMY,IAAIC,MAAM,sBANtB,OAQQC,EAAOH,EAAQH,KAAKO,MAAM,GAC9BC,QAAQC,IAAIN,EAAQH,MACpBlB,KAAKiB,UAAS,SAACW,GAAD,MAAS,CACrBjB,MAAM,GAAD,mBACAiB,EAAGjB,OADH,CAEH,CACEkB,GAAIL,EAAKM,KACT3B,MAAOqB,EAAKrB,MACZE,KAAK,GAAD,OAAKmB,EAAKO,MAAV,eAAsBP,EAAKQ,aAhBzC,kDAqBIC,MAAM,EAAD,IArBT,0D,0EAyBA,WACE,IAAMR,EAAQzB,KAAKS,MAAME,MAAMuB,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAAiB9B,KAAM8B,EAAE9B,KAAMF,MAAOgC,EAAEhC,OAA7BgC,EAAEN,OAEf,OACE,sBAAK5B,UAAU,OAAf,UACE,oBAAIA,UAAU,aAAd,uCACA,oBAAIA,UAAU,sBAAd,8DAGA,wBAAQA,UAAU,WAAWmC,QAASpC,KAAKY,QAA3C,uBAGA,qBAAKX,UAAU,gBAAf,SAAgCwB,W,GAhDrBnB,aAqDJE,I,MChDA6B,MARf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b2cde245.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Card.css\";\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let angle = Math.random() * 90 - 45;\r\n    let xPos = Math.random() * 40 - 20;\r\n    let yPos = Math.random() * 40 - 20;\r\n    this._transform = `translate(${xPos}px, ${yPos}px) rotate(${angle}deg)`;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <img\r\n        style={{ transform: this._transform }}\r\n        className=\"Card\"\r\n        src={this.props.image}\r\n        alt={this.props.name}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nconst API_URL = \"https://deckofcardsapi.com/api/deck/\";\r\nimport axios from \"axios\";\r\nimport Card from \"./Card\";\r\nimport \"./Deck.css\";\r\n\r\nclass Deck extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { deck: null, drawn: [] };\r\n    this.getCard = this.getCard.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    let deck = await axios.get(`${API_URL}/new/shuffle/`);\r\n    this.setState({ deck: deck.data });\r\n  }\r\n  async getCard() {\r\n    let deck_id = this.state.deck.deck_id;\r\n    try {\r\n      let cardUrl = `${API_URL}/${deck_id}/draw/`;\r\n      let cardRes = await axios.get(cardUrl);\r\n      if (!cardRes.data.success) {\r\n        throw new Error(\"No card remaining!\");\r\n      }\r\n      let card = cardRes.data.cards[0];\r\n      console.log(cardRes.data);\r\n      this.setState((st) => ({\r\n        drawn: [\r\n          ...st.drawn,\r\n          {\r\n            id: card.code,\r\n            image: card.image,\r\n            name: `${card.value} of ${card.suit}`,\r\n          },\r\n        ],\r\n      }));\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const cards = this.state.drawn.map((c) => (\r\n      <Card key={c.id} name={c.name} image={c.image} />\r\n    ));\r\n    return (\r\n      <div className=\"Deck\">\r\n        <h1 className=\"Deck-title\">♦ Card Dealer ♦</h1>\r\n        <h2 className=\"Deck-title subtitle\">\r\n          ♦ A LITTLE PROJECT MADE WITH REACTJS ♦\r\n        </h2>\r\n        <button className=\"Deck-btn\" onClick={this.getCard}>\r\n          Get Card!\r\n        </button>\r\n        <div className=\"Deck-cardarea\">{cards}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Deck;\r\n","import Deck from \"./Deck\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Deck />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}